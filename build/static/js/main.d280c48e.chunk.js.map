{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","parseFloat","this","props","accountBalance","toFixed","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","useState","description","amount","creditObject","setCreditObject","credits","map","credit","date","slice","id","addCredit","Date","toISOString","now","Debits","debitObject","setDebitObject","debits","debit","addDebit","App","logInInfo","newUser","currentUser","creditList","debitList","calculateBalance","currentDebit","currentCredit","axios","get","then","res","data","catch","err","console","log","prevProps","prevState","length","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d280c48e.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {parseFloat(this.props.accountBalance).toFixed(2)}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits</Link>\n        <br/>\n        <Link to=\"/debits\">Debits</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}  // Create an object for state\n    updatedUser.userName = e.target.value  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>)\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    )\n  }\n}\n\nexport default LogIn","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport AccountBalance from './AccountBalance';\n\nconst Credits = (props) => {\n  const [creditObject, setCreditObject] = useState({\n    description: \"\",\n    amount: 0\n  })\n  // Create the list of Credit items\n  let creditsView = () => {\n    const { credits } = props;\n    return credits.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each credits JSON array element\n      let date = credit.date.slice(0, 10);\n      return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\n    })\n  }\n\n  let handleSubmit = (e) => {\n    e.preventDefault()\n    props.addCredit({\n      ...creditObject,\n      date: (new Date()).toISOString(),\n      id: Date.now()\n    })\n  }\n\n  let handleChange = (e) => {\n    setCreditObject({\n      ...creditObject,\n      [e.target.name]: e.target.value\n    })\n  }\n  // Render the list of Credit items and a form to input new Credit item\n  return (\n    <div>\n      <h1>Credits</h1>\n\n      {creditsView()}\n\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"description\" value={creditObject.description} onChange={handleChange} />\n        <input type=\"number\" name=\"amount\" value={creditObject.amount} onChange={handleChange} />\n        <button type=\"submit\">Add Credit</button>\n      </form>\n      <br />\n      <AccountBalance accountBalance={props.accountBalance}/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  )\n}\n\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport AccountBalance from './AccountBalance';\n\nconst Debits = (props) => {\n  const [debitObject, setDebitObject] = useState({\n    description: \"\",\n    amount: 0\n  })\n  // Create the list of Debit items\n  let debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0, 10);\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n    })\n  }\n\n  let handleSubmit = (e) => {\n    e.preventDefault()\n    props.addDebit({\n      ...debitObject,\n      date: (new Date()).toISOString(),\n      id: Date.now()\n    })\n  }\n\n  let handleChange = (e) => {\n    setDebitObject({\n      ...debitObject,\n      [e.target.name]: e.target.value\n    })\n  }\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n\n      {debitsView()}\n\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"description\" onChange={handleChange} />\n        <input type=\"number\" name=\"amount\" onChange={handleChange} />\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br />\n      <AccountBalance accountBalance={props.accountBalance}/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  )\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super();\n    this.state = {\n      accountBalance: 0,\n      debitList: [],\n      creditList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    }\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {\n    const newUser = { ...this.state.currentUser }\n    newUser.userName = logInInfo.userName\n    this.setState({ currentUser: newUser })\n  }\n\n  addCredit = (creditObject) => {\n    this.setState({\n      creditList: [...this.state.creditList, creditObject]\n    })\n  }\n\n  addDebit = (debitObject) => {\n    this.setState({\n      debitList: [...this.state.debitList, debitObject]\n    })\n  }\n\n  calculateBalance = () => {\n    let currentDebit = 0\n    let currentCredit = 0\n    this.state.creditList.map(credit => {\n      currentCredit += parseFloat(parseFloat(credit.amount).toFixed(2))\n    })\n    this.state.debitList.map(debit => {\n      currentDebit += parseFloat(parseFloat(debit.amount).toFixed(2))\n    })\n    return (currentCredit - currentDebit)\n  }\n\n  componentDidMount() {\n    axios.get(\"https://moj-api.herokuapp.com/credits\").then(res => {\n      this.setState({\n        creditList: res.data\n      })\n    }).catch(err => {\n      console.log(err)\n    })\n    axios.get(\"https://moj-api.herokuapp.com/debits\").then(res => {\n      this.setState({\n        debitList: res.data\n      })\n    }).catch(err => {\n      console.log(err)\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if ((prevState.creditList.length != this.state.creditList.length) || (prevState.debitList.length != this.state.debitList.length)) {\n      let accountBalance = this.calculateBalance()\n      this.setState({\n        accountBalance\n      })\n    }\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {\n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />);\n    const UserProfileComponent = () => (<UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />);\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const DebitsComponent = () => (<Debits accountBalance={this.state.accountBalance} debits={this.state.debitList} addDebit={this.addDebit} />)\n    const CreditsComponent = () => (<Credits accountBalance={this.state.accountBalance} credits={this.state.creditList} addCredit={this.addCredit} />)\n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/bank-of-react-example-code-gh-pages\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent} />\n          <Route exact path=\"/userProfile\" render={UserProfileComponent} />\n          <Route exact path=\"/login\" render={LogInComponent} />\n          <Route exact path=\"/credits\" render={CreditsComponent} />\n          <Route exact path=\"/debits\" render={DebitsComponent} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}